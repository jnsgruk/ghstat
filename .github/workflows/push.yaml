name: CI

on:
  push:
    branches:
      - main
    tags:
      - "!**"

jobs:
  binaries:
    name: Build ghstat
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Setup goreleaser
        run: |
          sudo snap install --classic goreleaser

      - name: Build ghstat
        id: build
        run: |
          goreleaser build --rm-dist --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  snap:
    name: Build snap
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup LXD
        uses: canonical/setup-lxd@main

      - name: Get version
        id: version
        run: |
          echo "version=$(yq -r ".version" snap/snapcraft.yaml)" >> "$GITHUB_OUTPUT"

      - name: Setup Snapcraft
        env:
          LP_BUILD_SECRET: ${{ secrets.LP_BUILD_SECRET }}
        run: |
          sudo snap install snapcraft --classic

          mkdir -p ~/.local/share/snapcraft/provider/launchpad ~/.local/share/snapcraft
          echo "${LP_BUILD_SECRET}" > ~/.local/share/snapcraft/provider/launchpad/credentials
          echo "${LP_BUILD_SECRET}" > ~/.local/share/snapcraft/launchpad-credentials

          git config --global user.email "github-actions@github.com"
          git config --global user.name "Github Actions"

      - name: Build snap
        env:
          SNAPCRAFT_REMOTE_BUILD_STRATEGY: force-fallback
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          echo "::group::remote-build output"
          snapcraft remote-build --launchpad-accept-public-upload
          echo "::endgroup::"

          echo "::group::amd64 build log"
          cat "ghstat_amd64.txt"
          echo "::endgroup::"

          echo "::group::arm64 build log"
          cat "ghstat_arm64.txt"
          echo "::endgroup::"

      - name: Release snap to edge
        env:
          SNAPCRAFT_STORE_CREDENTIALS: ${{ secrets.STORE_SECRET }}
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          snapcraft upload "ghstat_${VERSION}_amd64.snap" --release latest/edge
          snapcraft upload "ghstat_${VERSION}_arm64.snap" --release latest/edge
